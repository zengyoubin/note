    * [类加载、连接与初始化](#类加载连接与初始化)
      * [类加载器](#类加载器)
            * [java虚拟机与程序的生命周期](#java虚拟机与程序的生命周期)
          * [加载](#加载)
          * [连接](#连接)
          * [初始化](#初始化)
            * [初始化时机](#初始化时机)
          * [常量本质](#常量本质)
          * [类加载器](#类加载器-1)
            * [类加载器的双亲委派机制](#类加载器的双亲委派机制)
            * [命名空间](#命名空间)
            * [线程上下文加载器](#线程上下文加载器)
            * [不同类加载器的命名空间的关系](#不同类加载器的命名空间的关系)
        * [类的卸载](#类的卸载)
    * [Java字节码](#java字节码)
      * [整体结构](#整体结构)
        * [字节码结构](#字节码结构)
        * [常量表](#常量表)
          * [常量池数据结构总表](#常量池数据结构总表)
        * [Access_Flag访问标志符](#access_flag访问标志符)
        * [字段表](#字段表)
          * [字段表结构](#字段表结构)
          * [字段访问标志](#字段访问标志)
          * [描述符标识字符含义](#描述符标识字符含义)
        * [方法表](#方法表)
          * [方法表结构](#方法表结构)
          * [方法访问标志符](#方法访问标志符)
        * [属性结构](#属性结构)
          * [属性表结构](#属性表结构)
          * [虚拟机规范预定义的属性](#虚拟机规范预定义的属性)
            * [Code属性](#code属性)
            * [Exceptions属性](#exceptions属性)
            * [LineNumberTable属性](#linenumbertable属性)
            * [LocalVariableTable及LocalVaribleTypeTable属性](#localvariabletable及localvaribletypetable属性)
            * [SourceFile属性](#sourcefile属性)
            * [SourceDebugExtension属性](#sourcedebugextension属性)
            * [ConstantValue属性](#constantvalue属性)
            * [InnerClasses属性](#innerclasses属性)
            * [Deprecated及Synthetic属性](#deprecated及synthetic属性)
            * [StackMapTable属性](#stackmaptable属性)
            * [Signature属性](#signature属性)
            * [BootstrapMethods属性](#bootstrapmethods属性)
            * [MethodParameters属性](#methodparameters属性)
        * [字节码分析](#字节码分析)
    * [JVM内存空间](#jvm内存空间)
        * [Java虚拟机栈](#java虚拟机栈)
          * [栈帧](#栈帧)
            * [局部变量表](#局部变量表)
            * [操作数栈](#操作数栈)
            * [动态链接](#动态链接)
        * [程序计数器（Program Counter）](#程序计数器program-counter)
        * [本地方法栈](#本地方法栈)
        * [Java 堆（Heap）](#java-堆heap)
        * [方法区(Method Area)](#方法区method-area)
        * [运行时常量池](#运行时常量池)
        * [直接内存（Direct Memory）](#直接内存direct-memory)
      * [关于Java对象创建的过程](#关于java对象创建的过程)
          * [new关键字创建对象的3个步骤](#new关键字创建对象的3个步骤)
        * [指针碰撞](#指针碰撞)
        * [空闲列表](#空闲列表)
      * [对象在内存中的布局](#对象在内存中的布局)
        * [引用访问对象的方式](#引用访问对象的方式)
        * [jstack 命令](#jstack-命令)
    * [JVM垃圾回收](#jvm垃圾回收)
      * [内存](#内存)
        * [内存结构](#内存结构)
        * [内存分配](#内存分配)
        * [内存回收](#内存回收)
        * [方法区的垃圾回收](#方法区的垃圾回收)
      * [JVM垃圾回收模型](#jvm垃圾回收模型)
        * [垃圾判断算法](#垃圾判断算法)
          * [引用计数算法（REference Counting）](#引用计数算法reference-counting)
          * [可达性分析算法（Reachability Analysis ）](#可达性分析算法reachability-analysis-)
        * [GC算法（常见的GC算法）](#gc算法常见的gc算法)
          * [标记-清除算法(Mark-Sweep)](#标记-清除算法mark-sweep)
          * [标记整理算法(Mark-Compact)](#标记整理算法mark-compact)
          * [复制收集算法(Copying)](#复制收集算法copying)
          * [分代算法(Generational)](#分代算法generational)
        * [垃圾回收器的实现和选择](#垃圾回收器的实现和选择)
          * [GC的时机](#gc的时机)
          * [垃圾收集器的“并行”和“并发”](#垃圾收集器的并行和并发)
          * [Serial收集器](#serial收集器)
          * [ParNew收集器](#parnew收集器)
          * [Parallel Scavenge收集器](#parallel-scavenge收集器)
          * [Serial Old收集器](#serial-old收集器)
          * [Parallel Old收集器](#parallel-old收集器)
          * [CMS（Concurrent Mark Sweep）收集器](#cmsconcurrent-mark-sweep收集器)
            * [CMS 收集器收集步骤](#cms-收集器收集步骤)
      * [枚举根节点](#枚举根节点)
      * [安全点（Safepoint）](#安全点safepoint)
      * [安全区域（Safe Region）](#安全区域safe-region)
      * [空间分配担保](#空间分配担保)
      * [GC垃圾收集器的JVM参数定义](#gc垃圾收集器的jvm参数定义)
    * [G1（Garbage First Collector）](#g1garbage-first-collector)
        * [吞吐量](#吞吐量)
        * [响应能力](#响应能力)
      * [<a href="https://www.oracle.com/technetwork/tutorials/tutorials-1876574.html" rel="nofollow">G1 Garbage Collector</a>](#g1-garbage-collector)
        * [传统垃圾收集器堆结构](#传统垃圾收集器堆结构)
        * [G1 收集器堆结构](#g1-收集器堆结构)
        * [G1 vs CMS](#g1-vs-cms)
          * [G1相对于CMS的优势](#g1相对于cms的优势)
          * [G1的适合场景](#g1的适合场景)
        * [G1重要概念](#g1重要概念)
          * [分区(Region)](#分区region)
          * [收集集合（CSet）](#收集集合cset)
          * [已记忆集合（RSet）](#已记忆集合rset)
          * [Snapshot-At- The-Beginning(SATB)](#snapshot-at--the-beginningsatb)
        * [G1 GC模式](#g1-gc模式)
          * [global concurrent marking](#global-concurrent-marking)
          * [G1在运行过程中的主要模式](#g1在运行过程中的主要模式)
          * [G1 Mainor GC/Young GC](#g1-mainor-gcyoung-gc)
          * [Mixed GC](#mixed-gc)
          * [G1收集概念](#g1收集概念)
            * [Humongous区域](#humongous区域)

<!-- Added by: ahaschool, at: 2021年 8月20日 星期五 12时59分08秒 CST -->

